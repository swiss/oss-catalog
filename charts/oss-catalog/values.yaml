# Default values for oss-catalog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- enable frontend (does not affect api, db and crawler)
enabled: true

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/swiss/oss-catalog
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

config:
  # -- API base URL (update according to the actual API service name)
  API_BASEURL: http://oss-catalog-api/v1/
  # -- (string) Name of existing Kubernetes secret containing keys as listed under secrets.
  # If not provided, a secret will be generated using values from secrets.
  # Replace value of useExistingSecret under api and crawler also, if you chose to use another name than "oss-catalog-secrets"
  useExistingSecret: ""
    
  secrets:
    # -- Base64 bearer token (secret key: "api-bearer-token")
    apiBearerToken: ""
    # -- github token (secret key: "github-token")
    githubToken: ""
    # -- Base64 encoded Paseto Key (secret key: "pasetoKey").
    pasetoKey: ""
    # -- Database connection string, e.g. "host= port=5432 dbname= user= password= sslmode=require" (secret key: "databaseDSN").
    databaseDSN: ""
  
api:
  # -- enable api
  enabled: true
  # -- (int) Max number of requests.
  maxRequests:
  # -- Secret name
  useExistingSecret: "oss-catalog-secrets"
  
crawler:
  enabled: true
  env:
    # -- API base URL (update according to the actual API service name)
    API_BASEURL: http://oss-catalog-api/v1/
    # -- Main publisher ID (fe. "456123fe-e5ad-41fa-b894-8a021a8ed972")
    MAIN_PUBLISHER_ID: ""
    # -- Skip vitality
    SKIP_VITALITY: true
  cronjob_schedule: "0 0 * * *"
  
  # -- Secret name
  useExistingSecret: "oss-catalog-secrets"

db:
# -- enable db
  enabled: true
  global:
    ## @param global.storageClass Global StorageClass for Persistent Volume(s)
    ##
    storageClass: ""
    postgresql:
      ## @param global.postgresql.auth.postgresPassword Password for the "postgres" admin user (overrides `auth.postgresPassword`)
      ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)
      ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)
      ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)
      ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
      ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
      ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
      ##
      auth:
        postgresPassword: ""
        username: ""
        password: ""
        database: "postgres"
        existingSecret: ""
        secretKeys:
          adminPasswordKey: ""
          userPasswordKey: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

extraManifests: []
